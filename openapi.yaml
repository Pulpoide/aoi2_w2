openapi: 3.0.1
info:
  title: API Productos
  description: Esta API se encarga de manipular información de productos
  version: 1.0.0
  
servers:
- url: http://localhost:8888
tags:
- name: Productos
  description: Estos endpoints manejan la información de los productos
  
paths:
  /api/1.0/products/create: 
    post:
      summary: Agregar un nuevo producto a la BD
      tags:
      - Productos
      requestBody:
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/BodyProductosPost'
        required: true
      responses:
        '201':
          description: (OK) La información del producto se guardo correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExitoProductosPost'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: "#/components/responses/ServerError"
          
          
  /api/1.0/products/:
    get:
      summary: Mostrar todos los productos de la BD
      tags:
      - Productos
      responses:
        '200':
          description: (OK) La información del producto se guardo correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExitoProductosGet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'        
  
          
  /api/1.0/products/{code}:
    get:
      summary: Mostrar un único producto de la BD
      tags:
      - Productos
      parameters:
       [$ref: '#/components/parameters/code']
      responses:
        '200':
          description: (OK) La información del producto se guardo correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExitoProductosGet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: (NotFound) no se encontró la información
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundProducto'
        '500':
          $ref: '#/components/responses/ServerError' 
    
    
  /api/1.0/products/update/{code}:
    put:
      summary: Actualizar un producto de la BD
      tags:
      - Productos
      parameters:
        [$ref: '#/components/parameters/code']
      requestBody:
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/BodyProductosPost'
        required: true
          
      responses:
        '200':
          description: (OK) La información del producto se guardo correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExitoProductosGet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: (NotFound) no se encontró la información
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundProducto'
        '500':
          $ref: '#/components/responses/ServerError'
          
          
  /api/1.0/products/uploadImg:
    post:
      summary: Agregar una imágen a la carpeta public
      tags:
      - Productos
      requestBody:
        required: true 
        content:
          file:
            schema:
              type: string
              format: binary
           
      responses:  
        '200':
          description: (OK) La imagen se cargó exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
            $ref: '#/components/responses/BadRequest'
        '404':
          description: (NotFound) no se encontró la información
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundProducto'
        '500':
          $ref: '#/components/responses/ServerError'
          
          
  /api/1.0/products/delete/{code}:
    delete:
      summary: Eliminar un producto de la BD
      tags:
      - Productos
      parameters:
          [$ref: '#/components/parameters/code']
      responses:
        '200':
            description: (OK) La imagen se cargó exitosamente
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '404':
          description: (NotFound) no se encontró el producto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundProducto'
        '500':
            $ref: '#/components/responses/ServerError'
    
    
    
components:
  responses:
    NotFound:
      description: (NotFound) no se encontró la información
      
    BadRequest:
      description: (BadRequest) los datos enviados son incorrectos o hay datos obligatorios no enviados
      
    ServerError:
      description: Error en el servidor
  
  parameters:
    code:
      in: path
      name: code
      description: Código del producto
      required: true
      schema:
        type: integer
  
  
  
  schemas:
    BodyProductosPost:
      type: object
      properties:
        nombre:
          type: string
          description: Nombre del producto
        descripcion:
          type: string
          description: Descripción del producto
        precio:
          type: integer
          description: Precio del producto
        marca:
          type: string
          description: Marca del producto
        stock:
          type: integer
          description: Stock del producto
        img:
          type: string
          description: Imagen del producto
          
    ExitoProductosPost:
      type: object
      properties:
        status:
          type: string
          description: Bandera que nos indica si la llamada al servicio fue exitosa
        message:
          type: string
          description: Mensaje de confirmación
        product:
          type: object
          description: Descripción del producto agregado
          properties:
            code:
              type: integer
            nombre:
              type: string
            descripción:
              type: string
            precio:
              type: integer
            marca:
              type: string
            stock:
              type: integer
            img:
              type: string
              
    ExitoProductosGet:
      type: object
      properties:
        status:
          type: string
          description: Bandera que nos indica si la llamada al servicio fue exitosa
        products:
          type: array
          items:
            type: object
            description: Descripción del producto agregado
            properties:
              codigo:
                type: integer
              nombre:
                type: string
              descripcion:
                type: string
              precio:
                type: integer
              marca:
                type: string
              stock:
                type: integer
              img:
                type: string
              
    NotFoundProducto:
      type: object
      properties:
        message:
          type: string
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            